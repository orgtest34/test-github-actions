name: Create Tag on PR Merge

on:
  workflow_run:
    workflows: ["PR Workflow"]
    types:
      - completed

jobs:
  create_tag_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Fetch PR Info from GitHub API
        id: pr_info
        run: |
          # Fetch the latest merged PR number
          PR_NUMBER=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls?state=closed | \
            jq '[.[] | select(.merged_at != null)] | .[0].number')

          # Fetch the PR title and body using the PR number
          PR_TITLE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER | \
            jq -r '.title')

          PR_BODY=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER | \
            jq -r '.body')

          # Log the PR info
          echo "PR_NUMBER=${PR_NUMBER}"
          echo "PR_TITLE=${PR_TITLE}"
          echo "PR_BODY=${PR_BODY}"

          # Store PR_TITLE and PR_BODY into environment variables for later use
          echo "PR_TITLE=${PR_TITLE}" >> $GITHUB_ENV

          # Escape newlines in PR_BODY before writing it to the environment
          echo "PR_BODY=$(echo "$PR_BODY" | sed ':a;N;$!ba;s/\n/\\n/g')" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          # Replace spaces with underscores in PR title for the tag name
          TAG_NAME="${{ env.PR_TITLE }}"
          TAG_NAME=$(echo "$TAG_NAME" | sed 's/ /_/g')

          # Create and push the tag
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"

          echo "Tag Name: $TAG_NAME"
          echo "PR Body: ${{ env.PR_BODY }}"

          # Store the tag name to use in the next step
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Create spectrocoin.zip
        run: |
          mkdir spectrocoin-accepting-bitcoin  # Create the folder inside the working directory
          # Copy only the necessary files and exclude the folder and unwanted files
          find . -maxdepth 1 ! -name 'spectrocoin-accepting-bitcoin' ! -name '.' ! -name '.git' ! -name '.github' ! -name 'README.txt' ! -name 'README.md' ! -name 'changelog.md' ! -name '.gitignore' -exec cp -r {} spectrocoin-accepting-bitcoin/ \;
          zip -r spectrocoin.zip spectrocoin-accepting-bitcoin  # Zip the folder
        shell: bash

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: "${{ env.TAG_NAME }}"
          body: "${{ env.PR_BODY }}"
          draft: false
          prerelease: false

      - name: Upload spectrocoin.zip as release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: spectrocoin.zip
          asset_name: spectrocoin.zip
          asset_content_type: application/zip
